package viveksingh.restful.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import viveksingh.restful.beans.Post;
import viveksingh.restful.dao.PostDaoService;
import viveksingh.restful.exception.PostNotFoundException;

@RestController
public class PostResource {

	@Autowired
	PostDaoService postDaoService;

	// - Retrieve all posts of a user -- GET /users/{id}/posts
	/**
	 * Retrieve all posts for provided user id.
	 * 
	 * @param userId
	 * @return
	 */
	@GetMapping(path = { "/users/{userId}/posts"})
	public List<Post> retrivePosts(@PathVariable(name = "userId") int userId) {

		final List<Post> posts = postDaoService.retrieveAllPosts(userId);

		if (posts == null || posts.isEmpty()) {
			throw new PostNotFoundException("User ID - " + userId);
		}

		return posts;
	}

	// - Retrieve a post for a user -- GET /users/{id}/posts/{post_id}
	/**
	 * Retrieve post with for provided user and post ID.
	 * 
	 * @param userId
	 * @param id
	 * @return
	 */
	@GetMapping(path = { "/users/{userId}/posts/{id}"})
	public List<Post> retrivePost(@PathVariable(name = "userId") int userId,
			@PathVariable(name = "id") final long postId) {

		final List<Post> posts = postDaoService.retrievePost(userId, postId);

		if (posts == null || posts.isEmpty()) {
			throw new PostNotFoundException("User ID - " + userId + ", Post ID - " + postId);
		}

		return posts;
	}

	// - Create a post for a user -- POST /users/{id}/posts
	/**
	 * Save provided post for the user.
	 * 
	 * @param userId
	 * @param post
	 * @return
	 */
	@PostMapping(path = { "/users/{id}/posts" })
	public Post createPost(@PathVariable(name = "id") int userId, @RequestBody(required = true) final Post post) {

		final Post posts = postDaoService.createPost(userId, post);

		if (posts == null) {
			throw new PostNotFoundException("User ID - " + userId + ", Message - " + post.getMessage());
		}

		return posts;
	}
	
	
	// retrieve all posts
}
